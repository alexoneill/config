#!/bin/bash
# 10-functions
# aoneill - 11/26/15

# Printing certain statistics about drives
function printDriveStats() {
  disp=$1

  # If a name is passed in as well, display it
  if (( $# == 2 )); then
    echo -ne "${BLD_BLU}$1${TXT_RST}: "
    disp=$2
  fi

  free="$(df -h | grep $1 |\
    perl -n -e '/(.*)G (.*)G (.*)G/ && print($2)' |\
    sed -e 's/ //g')G"
  used="$(df -h | grep $1 |\
    perl -n -e '/(.*)G (.*)G (.*)G/ && print($3)' |\
    sed -e 's/ //g')G"

  # Print statistics
  echo -ne "${BLD_CYN}${disp}${TXT_RST} -- "
  echo -ne "Used Space: ${BLD_RED}${free}${TXT_RST}, "
  echo -ne "Free Space: ${BLD_GRN}${used}${TXT_RST}"
  echo
}

# Set the title of the Termite window
function title() { echo -e "\e]0;$@\a"; }

# Quick helper for error messages
function error() { echo -e "${BLD_RED}$@${BLD_RST}"; }

# Strip colors from output
function cstrip() { sed -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[mGK]//g"; }

# Special Latex compiler, for use with DFA's in LaTeX
function dfatex() {
  latex -halt-on-error "$1" &&\
    dvips "${1%.*}.dvi" &&\
    ps2pdf "${1%.*}.ps"
}

# Make a rainbow!
function rainbow() {
  yes "$(seq 1 255)" | while read i
  do
    printf "\x1b[48;5;${i}m\n"
    sleep .01
  done
}

# Go up until a makefile is found, then run make
function makeup() {
  backup="$OLDPWD"
  current="$(pwd)"

  while [[ ! -f Makefile ]] && [[ "$(pwd)" != "/" ]]; do
    cd ..
  done;

  dir="$(pwd)"
  cd "$current"
  export OLDPWD="$backup"

  [[ -f "$dir/Makefile" ]] && make -C "$dir" $@
}

# Determine the number of days left on a certificate
function certdays() {
  site="$1"

  echo \
    | openssl s_client \
        -connect "$site:443" \
        -servername "$site" \
        2>/dev/null \
    | openssl x509 -noout -dates
}

# Convert a DOS file to Unix (convert line endings)
function dos2unix() {
  tr -d '\r' < $1 > $2
}

function i3bar-relaod() {
  i3-msg -t command reload
  killall i3bar

  bar_id=$(i3-msg -t get_bar_config | sed -e 's/.*"bar-\([0-9]\+\)".*/bar-\1/')
  i3bar --bar_id=${bar_id} --socket=$(i3 --get-socketpath) &
}

function github() {
  origin=$(git config --get remote.origin.url)
  [[ -n $origin ]] && \
    xdg-open $(echo $origin | sed -e "s|^git@github.com:|https://github.com|")
}

