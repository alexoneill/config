#!/bin/bash
# amount
# aoneill - 10/08/15

mnt="/mnt"

# Enaure root access
if [[ $(whoami) != "root" ]]
then
  echo "Error: Mounting requires root access!"
  exit
fi

# Get candidate devices
devs=$(mktemp)
lsblk -npJlo name,type,mountpoint,label \
  | grep '"mountpoint": null' \
  | grep '"type": "part"' \
  | sed -e 's/null/""/g' \
  | sed -e 's/.*"name": "\([^"]*\)",.*"label": "\([^"]*\)".*/\1 \2/g' > $devs

if [[ "$(wc -l $devs | awk -e '{print $1;}')" == "0" ]]; then
  echo "Error: Nothing to mount!"
  exit
fi

if [[ "$(wc -l $devs |  awk -e '{print $1;}')" != "1" ]]; then
  # Display a menu to choose device
  exec 3>&1
  out=$(eval "dialog --title \"mount $@\" --menu \"Device:\" 14 40 7 \
          $(cat $devs | awk -e '{printf "%d \"%s\" ", NR, $0}')" 2>&1 1>&3)
  exec 3>&-

  # Make sure something was chosen
  clear
  [[ "$out" == "" ]] && exit
else
  out="1"
fi

# Lookup device
device=$(sed -e "${out}q;d" $devs)
rm $devs

dev=$(echo $device | awk -e '{print $1;}')
label=$(echo $device | awk -e '{$1 = ""; print $0;}' | sed -e "s/^\s//g")

if [[ "$label" == "" ]]; then
  label="$(echo $dev | awk -F'/' '{print $NF}' | tr '[:lower:]' '[:upper:]')"
fi

if [[ -d "$mnt/$label" ]]; then
  label=$(mktemp --tmpdir="$mnt" -d "$label.XXX")
else
  label="$mnt/$label"
fi

mkdir -p "$label"

# Mount with passed flags
mount $@ $dev "$label" && echo "Mounted $dev on $label."
