#!/bin/bash
# 80-prompt
# aoneill - 11/26/15

function prompt_command {
  OLD_PWD_BACKUP="$OLD_PWD"
  TIME="\[${BLD_WHT}\][$(date +'%H:%M')]\[${TXT_RST}\] "
  HOST="\[${BLD_GRN}\]\u@\h\[${TXT_RST}\]"
  PROMPT="$"

  git branch &>/dev/null;
  if [ "$?" -eq 0 ]
  then
    git status 2>/dev/null | grep "nothing to commit" &>/dev/null;

    # Changed files
    if [ "$?" -eq "0" ]; then
      git cherry -v 2>/dev/null | grep "+" &>/dev/null;

      # Uncommitted Changes
      if [ "$?" -eq "0" ]; then
        GIT=$BLD_PUR
      else
        GIT=$BLD_CYN
      fi
    else
      GIT=$BLD_RED
    fi

    # Paths
    cwd="$(pwd)"
    here="$(readlink -f "$cwd")"

    # Git base dir
    git="$(git rev-parse --show-toplevel 2>/dev/null)"

    # Symbolic link territory
    if [[ "$here" != "$cwd" ]]; then
      # Reverse
      r_cwd="$(echo "$cwd" | rev)"
      r_here="$(echo "$here" | rev)"

      # Get largest similarity between the paths
      # Assume this is the git path
      gitPath=$(printf "%s\n%s\n" "$r_here" "$r_cwd" \
                  | sed -e 'N;s/\(.*\).*\n\1.*$/\1/' \
                  | rev)
    else
      # Path within git folder
      gitPath="$(echo "$here" | sed "s|$(dirname "$git")||")"
    fi

    # Path outside of git folder
    outPath="$(echo "$cwd" | sed -e "s|$gitPath$||" | sed -e "s|^$HOME|~|")"

    # Color accordingly
    DIR="\[${BLD_BLU}\]$outPath\[${GIT}\]$gitPath"
    PROMPT="$\[${TXT_RST}\]"
  else
    DIR="\[${BLD_BLU}\]\w\[${TXT_RST}\]"
  fi

  # Export proper coloring
  PS1="${TIME}${HOST}:${DIR}${PROMPT} "

  # Save history
  history -a

  # Restore old pwd
  OLD_PWD="$OLD_PWD_BACKUP"
}

PROMPT_COMMAND=prompt_command
